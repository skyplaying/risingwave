# Because currently general streaming version of session window is not supported yet,
# we only add e2e for batch mode.

statement ok
create table t (
    tm timestamp,
    foo int,
    bar int
);

statement ok
create view v1 as
select
    *,
    first_value(tm) over (partition by bar order by tm session with gap '10 minutes') as window_start,
    last_value(tm) over (partition by bar order by tm session with gap '10 minutes') as window_end
from t;

statement ok
insert into t values
  ('2023-05-06 16:51:00', 1, 100)
, ('2023-05-06 16:56:00', 8, 100)
, ('2023-05-06 17:30:00', 3, 200)
, ('2023-05-06 17:35:00', 5, 100)
, ('2023-05-06 17:59:00', 4, 100)
, ('2023-05-06 18:01:00', 6, 200)
;

query TiiTT
select * from v1 order by tm;
----
2023-05-06 16:51:00	1	100	2023-05-06 16:51:00	2023-05-06 16:56:00
2023-05-06 16:56:00	8	100	2023-05-06 16:51:00	2023-05-06 16:56:00
2023-05-06 17:30:00	3	200	2023-05-06 17:30:00	2023-05-06 17:30:00
2023-05-06 17:35:00	5	100	2023-05-06 17:35:00	2023-05-06 17:35:00
2023-05-06 17:59:00	4	100	2023-05-06 17:59:00	2023-05-06 17:59:00
2023-05-06 18:01:00	6	200	2023-05-06 18:01:00	2023-05-06 18:01:00

statement ok
insert into t values
  ('2023-05-06 18:08:00', 7, 100)
, ('2023-05-06 18:10:00', 9, 200)
;

query TiiTT
select * from v1 order by tm;
----
2023-05-06 16:51:00	1	100	2023-05-06 16:51:00	2023-05-06 16:56:00
2023-05-06 16:56:00	8	100	2023-05-06 16:51:00	2023-05-06 16:56:00
2023-05-06 17:30:00	3	200	2023-05-06 17:30:00	2023-05-06 17:30:00
2023-05-06 17:35:00	5	100	2023-05-06 17:35:00	2023-05-06 17:35:00
2023-05-06 17:59:00	4	100	2023-05-06 17:59:00	2023-05-06 18:08:00
2023-05-06 18:01:00	6	200	2023-05-06 18:01:00	2023-05-06 18:10:00
2023-05-06 18:08:00	7	100	2023-05-06 17:59:00	2023-05-06 18:08:00
2023-05-06 18:10:00	9	200	2023-05-06 18:01:00	2023-05-06 18:10:00

statement ok
drop view v1;

statement ok
drop table t;
